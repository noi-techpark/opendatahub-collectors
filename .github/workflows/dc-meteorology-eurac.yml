name: CI/CD meteorology-eurac-dc

on: 
  push:
    paths:
      - "collectors/meteorology-eurac/**"
      - "collectors/lib/ingress-mq/**"
      - ".github/workflows/dc-meteorology-eurac.yml"

env:
  AWS_REGION : eu-west-1
  AWS_EKS_CLUSTER_NAME : aws-main-eu-01
  JAVA_VERSION: 17
  WORKING_DIRECTORY: collectors/meteorology-eurac
  DOCKER_IMAGE: ghcr.io/noi-techpark/opendatahub-collectors/meteorology-eurac-dc
  DOCKER_TAG: ${{ github.sha }}
  KUBERNETES_NAMESPACE: collector
  VALUES_YAML: infrastructure/helm/values.yaml
  K8S_NAME: dc-meteorology-eurac

jobs:
  deploy-test:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    concurrency: deploy-test-meteorology-eurac-dc
    steps:
      - name: Checkout source code
        uses: actions/checkout@v4

      - name: Build libs
        uses: noi-techpark/github-actions/maven-build@v2
        with:
          working-directory: collectors/lib/ingress-mq
          java-version: ${{ env.JAVA_VERSION }}
          build-command: 'mvn clean install'

      - name: Build project
        uses: noi-techpark/github-actions/maven-build@v2
        with:
          working-directory: ${{ env.WORKING_DIRECTORY }}
          java-version: ${{ env.JAVA_VERSION }}
          build-command: 'mvn clean install'

      - name: Build and push images
        uses: noi-techpark/github-actions/docker-build-and-push@v2
        with:
          working-directory: ${{ env.WORKING_DIRECTORY }}/infrastructure
          docker-username: ${{ github.actor }}
          docker-password: ${{ secrets.GITHUB_TOKEN }}

      - name: Customize values.yaml
        working-directory: ${{ env.WORKING_DIRECTORY }}
        run: |
          yq -i '.image.repository="${{ env.DOCKER_IMAGE }}"' ${{ env.VALUES_YAML}}
          yq -i '.image.tag="${{ env.DOCKER_TAG }}"' ${{ env.VALUES_YAML }}
          yq -i '.image.pullPolicy="IfNotPresent"' ${{ env.VALUES_YAML }}

      - name: Deploy on cluster  
        uses: noi-techpark/github-actions/helm-deploy@v2
        with:
          k8s-name: ${{ env.K8S_NAME }}
          k8s-namespace: collector
          chart-path: helm/generic-collector
          values-file: ${{ env.WORKING_DIRECTORY}}/${{ env.VALUES_YAML }}
          aws-access-key-id: ${{ secrets.AWS_DEV_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_DEV_ACCESS_KEY_SECRET }}
          aws-eks-cluster-name: aws-main-eu-01
          aws-region: eu-west-1

