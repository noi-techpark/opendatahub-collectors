name: CI/CD tr-environment-a22

on: 
  push:
    paths:
      - "transformers/environment-a22/infrastructure/**"
      - "transformers/environment-a22/src/**"
      - "transformers/environment-a22/resources/**"
      - ".github/workflows/tr-environment-a22.yml"

env:
  WORKING_DIRECTORY: transformers/environment-a22
  DOCKER_IMAGE: ghcr.io/noi-techpark/opendatahub-collectors/tr-environment-a22
  DOCKER_TAG: ${{ github.sha }}
  KUBERNETES_NAMESPACE: collector

jobs:
  ci:
    runs-on: ubuntu-24.04
    concurrency: tr-environment-a22-ci
    permissions:
      packages: write
    steps:
    - name: Checkout source code
      uses: actions/checkout@v4

    - name: Run tests
      working-directory: ${{ env.WORKING_DIRECTORY }}/infrastructure
      run: docker compose --ansi never -f docker-compose.test.yml run --rm --build test

    - name: Build and push images
      uses: noi-techpark/github-actions/docker-build-and-push@v2
      with:
        working-directory: ${{ env.WORKING_DIRECTORY }}/infrastructure
        docker-username: ${{ github.actor }}
        docker-password: ${{ secrets.GITHUB_TOKEN }}
          
  # deploy-test:
  #   if: github.ref == 'refs/heads/main'
  #   needs: 
  #     - ci
  #   runs-on: ubuntu-24.04
  #   concurrency: tr-environment-a22-deploy-test
  #   environment: test
  #   env:
  #     PROJECT_NAME: tr-environment-a22
  #     VALUES_YAML: infrastructure/helm/values.yaml
  #   steps:
  #     - name: Checkout source code
  #       uses: actions/checkout@v4

  #     - name: Customize values.yaml
  #       working-directory: ${{ env.WORKING_DIRECTORY }}
  #       run: |
  #         yq -i '
  #           .image.repository="${{ env.DOCKER_IMAGE }}" |
  #           .image.tag="${{ env.DOCKER_TAG }}" |
  #           .image.pullPolicy="IfNotPresent" |

  #           .env.BDP_PROVENANCE_NAME="${{ env.PROJECT_NAME }}" |
  #           .env.BDP_PROVENANCE_VERSION="${{ github.sha}}"
  #         ' ${{ env.VALUES_YAML }}

  #     - name: Deploy on cluster  
  #       uses: noi-techpark/github-actions/helm-deploy@v2
  #       with:
  #         k8s-name: ${{ env.PROJECT_NAME }}
  #         k8s-namespace: collector
  #         chart-path: helm/generic-collector
  #         values-file: ${{ env.WORKING_DIRECTORY }}/${{ env.VALUES_YAML }}
  #         aws-access-key-id: ${{ secrets.AWS_DEV_ACCESS_KEY_ID }}
  #         aws-secret-access-key: ${{ secrets.AWS_DEV_ACCESS_KEY_SECRET }}
  #         aws-eks-cluster-name: aws-main-eu-01
  #         aws-region: eu-west-1

