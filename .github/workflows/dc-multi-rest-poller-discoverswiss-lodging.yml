name: CI/CD dc-multi-rest-poller discoverswiss-lodging

on: 
  push:
    paths:
      - "collectors/multi-rest-poller/**"
      - "!collectors/multi-rest-poller/infrastructure/helm/*"
      - "collectors/multi-rest-poller/infrastructure/helm/discoverswiss-lodging.yaml"
      - "collectors/multi-rest-poller/infrastructure/http_config/discoverswiss-lodging.yaml"
      - ".github/workflows/dc-multi-rest-poller-discoverswiss-lodging.yml"

env:
  WORKING_DIRECTORY: collectors/multi-rest-poller
  HTTP_CONFIG_PATH: infrastructure/http_config/discoverswiss-lodging.yaml
  DOCKER_IMAGE: ghcr.io/noi-techpark/opendatahub-collectors/dc-multi-rest-poller
  DOCKER_TAG: ${{ github.sha }}
  KUBERNETES_NAMESPACE: collector
  VALUES_YAML: infrastructure/helm/discoverswiss-lodging.yaml
  K8S_NAME: dc-multi-rest-poller-discoverswiss-lodging

jobs:
  build:
    runs-on: ubuntu-24.04
    concurrency: dc-multi-rest-poller-discoverswiss-lodging-build
    steps:
    - name: Checkout source code
      uses: actions/checkout@v4

    - name: Build and push images
      uses: noi-techpark/github-actions/docker-build-and-push@v2
      with:
        working-directory: ${{ env.WORKING_DIRECTORY }}/infrastructure
        docker-username: ${{ github.actor }}
        docker-password: ${{ secrets.GITHUB_TOKEN }}

  deploy-discoverswiss-lodging-test:
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/feat/discover'
    needs: build
    runs-on: ubuntu-24.04
    concurrency: dc-multi-rest-poller-discoverswiss-lodging-test
    environment: test
    steps:
      - name: Checkout source code
        uses: actions/checkout@v4

      - name: Customize values.yaml
        working-directory: ${{ env.WORKING_DIRECTORY }}
        run: |
          # Add the header key to http-config.yaml
          yq -i '.http_call.headers["Ocp-Apim-Subscription-Key"] = "${{ secrets.HTTP_HEADER_SUBSCRIPTION_DISCOVERSWISS }}"' "${{ env.HTTP_CONFIG_PATH }}"

          yq -i '.image.repository="${{ env.DOCKER_IMAGE }}"' ${{ env.VALUES_YAML}}
          yq -i '.image.tag="${{ env.DOCKER_TAG }}"' ${{ env.VALUES_YAML }}
          yq -i '.image.pullPolicy="IfNotPresent"' ${{ env.VALUES_YAML }}

          yq -i '.configMap.files["http-config.yaml"] = load_str("${{ env.HTTP_CONFIG_PATH }}")' ${{ env.VALUES_YAML }}

      - name: Deploy on cluster  
        uses: noi-techpark/github-actions/helm-deploy@v2
        with:
          k8s-name: dc-multi-rest-poller-discoverswiss-lodging
          k8s-namespace: collector
          chart-path: helm/generic-collector
          values-file: ${{ env.WORKING_DIRECTORY}}/${{ env.VALUES_YAML }}
          aws-access-key-id: ${{ secrets[vars.AWS_KEY_ID] }}
          aws-secret-access-key: ${{ secrets[vars.AWS_KEY_SECRET] }}
          aws-eks-cluster-name: aws-main-eu-01
          aws-region: eu-west-1
    
  # deploy-discoverswiss-lodging-prod:
  #   if: github.ref == 'refs/heads/prod'
  #   needs: build
  #   runs-on: ubuntu-24.04
  #   concurrency: dc-multi-rest-poller-discoverswiss-lodging-prod
  #   environment: prod
  #   steps:
  #     - name: Checkout source code
  #       uses: actions/checkout@v4

  #     - name: Customize values.yaml
  #       working-directory: ${{ env.WORKING_DIRECTORY }}
  #       run: |
  #         yq -i '.image.repository="${{ env.DOCKER_IMAGE }}"' ${{ env.VALUES_YAML}}
  #         yq -i '.image.tag="${{ env.DOCKER_TAG }}"' ${{ env.VALUES_YAML }}
  #         yq -i '.image.pullPolicy="IfNotPresent"' ${{ env.VALUES_YAML }}
  #         yq -i '.env.LOG_LEVEL = "INFO"' ${{ env.VALUES_YAML }}
  #         yq -i '.envSecret.OAUTH_CLIENT_ID = "${{ secrets.SKIDATA_OAUTH_CLIENT_ID }}"' ${{ env.VALUES_YAML }}
  #         yq -i '.envSecret.OAUTH_CLIENT_SECRET = "${{ secrets.SKIDATA_OAUTH_CLIENT_SECRET }}"' ${{ env.VALUES_YAML }}
  #         yq -i '.envSecret.OAUTH_USERNAME = "${{ secrets.SKIDATA_OAUTH_USERNAME }}"' ${{ env.VALUES_YAML }}
  #         yq -i '.envSecret.OAUTH_PASSWORD = "${{ secrets.SKIDATA_OAUTH_PASSWORD }}"' ${{ env.VALUES_YAML }}
  #         yq -i '.configMap.files["http-config.yaml"] = load_str("${{ env.HTTP_CONFIG_PATH }}")' ${{ env.VALUES_YAML }}

  #     - name: Deploy on cluster  
  #       uses: noi-techpark/github-actions/helm-deploy@v2
  #       with:
  #         k8s-name: dc-multi-rest-poller-discoverswiss-lodging
  #         k8s-namespace: collector
  #         chart-path: helm/generic-collector
  #         values-file: ${{ env.WORKING_DIRECTORY}}/${{ env.VALUES_YAML }}
  #         aws-access-key-id: ${{ secrets[vars.AWS_KEY_ID] }}
  #         aws-secret-access-key: ${{ secrets[vars.AWS_KEY_SECRET] }}
  #         aws-eks-cluster-name: aws-main-eu-01
  #         aws-region: eu-west-1