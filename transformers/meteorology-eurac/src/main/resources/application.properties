# dc-interface configuration (Writer API endpoint)
bdp_host=
bdp_port=0
bdp_endpoint=

endpoint_host=
endpoint_port=
endpoint_ssl=yes
endpoint_path=
app_callerId=
app_dataOrigin=
app_period=

##### Open Data Hub Configuration
# Data provenance (Where does our data come from?)
odh_client.stationtype=${ODH_CLIENT_STATIONTYPE:MeteoStation}
odh_client.provenance.name=${ODH_CLIENT_PROVENANCE_NAME:dc-meteorology-eurac}
odh_client.provenance.version=${ODH_CLIENT_PROVENANCE_VERSION:0.0.0-local-dev}
odh_client.provenance.origin=${ODH_CLIENT_PROVENANCE_ORIGIN:EURAC}
odh_client.period.climatology=${ODH_CLIENT_PERIOD_CLIMATOLOGY:31536000}
odh_client.period.climateDaily=${ODH_CLIENT_PERIOD_CLIMATEDAILY:86400}

spring.main.web-application-type=NONE

# Listen queue rabbitmq coordinates
mq.listen.uri=${MQ_LISTEN_URI}
# Exchange to which the listen queue is bound. should always be "routed"
mq.listen.exchange=${MQ_LISTEN_EXCHANGE:routed}
# Routing key for listen queue. Should be db.collection as provided by the data collector
mq.listen.key=${MQ_LISTEN_KEY}
# Name of queue to listen on. Should be db.collection as provided by the data collector
mq.listen.queue=${MQ_LISTEN_QUEUE}
# Timeout for listen queue in ms. That is how much time do we have to consume the message and ACK/NACK it
mq.listen.acktimeout=${MQ_LISTEN_ACKTIMEOUT:300000}

mongo.connectionString=${MONGO_CONNECTIONSTRING}
